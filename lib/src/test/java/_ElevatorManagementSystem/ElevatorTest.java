/*
 * This source file was generated by the Gradle 'init' task
 */
package _ElevatorManagementSystem;

import org.junit.jupiter.api.Test;

import com.elevator.manage.*;

import static org.junit.jupiter.api.Assertions.*;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.PrintStream;
import java.util.PriorityQueue;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;

class ElevatorTest {
	private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();
    private final ByteArrayInputStream inContent = new ByteArrayInputStream("4\n".getBytes());

    @BeforeEach
    public void setUp() {
        System.setOut(new PrintStream(outContent));
        System.setIn(inContent);
    }
    
    @AfterEach
    void restoreStreams() {
        System.setOut(System.out);
        System.setIn(System.in);
    }

    @Test
    void testPath_elevator_1() {
        // Path [1,2,3,4,5,15,16]
    	ElevatorManagementSystemApplication.main(new String[]{});
        assertTrue(outContent.toString().contains("Bye"));
    }

    @Test
    void testPath_elevator_2() {
        // Path [1,2,3,4,5,13,14,5,15,16]
        System.setIn(new ByteArrayInputStream("3\n4\n".getBytes()));
        ElevatorManagementSystemApplication.main(new String[]{});
        assertTrue(outContent.toString().contains("Bye"));
    }

    @Test
    void testPath_elevator_3() {
        // Path [1,2,3,4,5,10,11,12,5,15,16]
        System.setIn(new ByteArrayInputStream("2\n1\n4\n".getBytes()));
        ElevatorManagementSystemApplication.main(new String[]{});
        assertTrue(outContent.toString().contains("Bye"));
    }

    @Test
    void testPath_elevator_4() {
        // Path [1,2,3,4,5,6,7,8,9,5,15,16]
        System.setIn(new ByteArrayInputStream("1\n0\n1\n4\n".getBytes()));
        ElevatorManagementSystemApplication.main(new String[]{});
        assertTrue(outContent.toString().contains("Bye"));
    }

    @Test
    void testPath_scanner() {
        // Path [1,2,3,4,5,15,16]
    	ElevatorManagementSystemApplication.main(new String[]{});
        assertTrue(outContent.toString().contains("Bye"));
    }

    @Test
    void testPath_choice_1() {
        // Path [1,2,3,4,5,6,7,8,5,15,16]
        System.setIn(new ByteArrayInputStream("1\n0\n1\n4\n".getBytes()));
        ElevatorManagementSystemApplication.main(new String[]{});
        assertTrue(outContent.toString().contains("Bye"));
    }

    @Test
    void testPath_choice_2() {
        // Path [1,2,3,4,5,10,11,12,5,15,16]
        System.setIn(new ByteArrayInputStream("2\n1\n4\n".getBytes()));
        ElevatorManagementSystemApplication.main(new String[]{});
        assertTrue(outContent.toString().contains("Bye"));
    }

    @Test
    void testPath_choice_3() {
        // Path [1,2,3,4,5,13,14,5,15,16]
        System.setIn(new ByteArrayInputStream("3\n4\n".getBytes()));
        ElevatorManagementSystemApplication.main(new String[]{});
        assertTrue(outContent.toString().contains("Bye"));
    }

    @Test
    void testPath_choice_4() {
        // Path [1,2,3,4,5,15,16]
    	ElevatorManagementSystemApplication.main(new String[]{});
        assertTrue(outContent.toString().contains("Bye"));
    }

    @Test
    void testPath_choice_5() {
        // Path [1,2,3,4,5,17,5,15,16]
        System.setIn(new ByteArrayInputStream("9\n4\n".getBytes()));
        ElevatorManagementSystemApplication.main(new String[]{});
        assertTrue(outContent.toString().contains("Invalid input. Try again."));
    }

    @Test
    void testPath_sourceFloor_1() {
        // Path [1,2,3,4,5,6,7,8,5,15,16]
        System.setIn(new ByteArrayInputStream("1\n0\n1\n4\n".getBytes()));
        ElevatorManagementSystemApplication.main(new String[]{});
        assertTrue(outContent.toString().contains("Bye"));
    }

    @Test
    void testPath_sourceFloor_2() {
        // Path [1,2,3,4,5,6,7,8,9,5,15,16]
        System.setIn(new ByteArrayInputStream("1\n0\n1\n4\n".getBytes()));
        ElevatorManagementSystemApplication.main(new String[]{});
        assertTrue(outContent.toString().contains("Bye"));
    }

    @Test
    void testPath_direction_1() {
        // Path [1,2,3,4,5,6,7,8,5,15,16]
        System.setIn(new ByteArrayInputStream("1\n0\n1\n4\n".getBytes()));
        ElevatorManagementSystemApplication.main(new String[]{});
        assertTrue(outContent.toString().contains("Bye"));
    }

    @Test
    void testPath_direction_2() {
        // Path [1,2,3,4,5,6,7,8,9,5,15,16]
        System.setIn(new ByteArrayInputStream("1\n0\n1\n4\n".getBytes()));
        ElevatorManagementSystemApplication.main(new String[]{});
        assertTrue(outContent.toString().contains("Bye"));
    }

    @Test
    void testPath_destinationFloor() {
        // Path [1,2,3,4,5,10,11,12,5,15,16]
        System.setIn(new ByteArrayInputStream("2\n1\n4\n".getBytes()));
        ElevatorManagementSystemApplication.main(new String[]{});
        assertTrue(outContent.toString().contains("Bye"));
    }
    
    @Test
    public void testAddRequest() {
    	Elevator elevator = new Elevator();
    	
        // Create a request to add
        Request request = new Request(2, true);

        // Call the addRequest method
        elevator.addRequest(request);

        // Check if the requestQueue contains the request
        PriorityQueue<Request> requestQueue = elevator.getRequestQueue();
        assertTrue(requestQueue.contains(request));
    }
}

